// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zoo.Data;

#nullable disable

namespace Zoo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240416070437_addAnimaliakToDb")]
    partial class addAnimaliakToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.1.24081.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Zoo.Models.Animaliak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ID_arraza")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Izena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Sarrera_data")
                        .HasColumnType("date");

                    b.Property<DateOnly>("urte_betetzea")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.ToTable("Animalia");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_arraza = 1,
                            ImageUrl = "",
                            Izena = "Tony the Terrific Tige",
                            Sarrera_data = new DateOnly(2024, 4, 1),
                            urte_betetzea = new DateOnly(2021, 10, 5)
                        },
                        new
                        {
                            ID = 2,
                            ID_arraza = 7,
                            ImageUrl = "",
                            Izena = "Eric the Enthusiastic Elephant",
                            Sarrera_data = new DateOnly(202, 11, 30),
                            urte_betetzea = new DateOnly(2019, 4, 20)
                        },
                        new
                        {
                            ID = 3,
                            ID_arraza = 1,
                            ImageUrl = "",
                            Izena = "Tara the Tremendous Tiger",
                            Sarrera_data = new DateOnly(2021, 4, 5),
                            urte_betetzea = new DateOnly(2021, 10, 10)
                        });
                });

            modelBuilder.Entity("Zoo.Models.Arraza", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Deskribapena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ID_lekua")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Izena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ID_lekua");

                    b.ToTable("Arrazak");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Deskribapena = "Donec ante enim, imperdiet non metus a, aliquet fermentum tortor. Etiam sem nunc, ornare id dignissim non, congue at nulla. Integer semper leo nisl, ac tincidunt libero aliquam id. Morbi quis ornare eros. Nunc at ultricies mi. Aliquam vitae bibendum metus. Aenean venenatis cursus sapien. Vivamus feugiat egestas urna.",
                            ID_lekua = 1,
                            ImageUrl = "",
                            Izena = "Tigre"
                        },
                        new
                        {
                            ID = 2,
                            Deskribapena = "Donec ante enim, imperdiet non metus a, aliquet fermentum tortor. Etiam sem nunc, ornare id dignissim non, congue at nulla. Integer semper leo nisl, ac tincidunt libero aliquam id. Morbi quis ornare eros. Nunc at ultricies mi. Aliquam vitae bibendum metus. Aenean venenatis cursus sapien. Vivamus feugiat egestas urna.",
                            ID_lekua = 2,
                            ImageUrl = "",
                            Izena = "Leon"
                        },
                        new
                        {
                            ID = 3,
                            Deskribapena = "Donec ante enim, imperdiet non metus a, aliquet fermentum tortor. Etiam sem nunc, ornare id dignissim non, congue at nulla. Integer semper leo nisl, ac tincidunt libero aliquam id. Morbi quis ornare eros. Nunc at ultricies mi. Aliquam vitae bibendum metus. Aenean venenatis cursus sapien. Vivamus feugiat egestas urna.",
                            ID_lekua = 3,
                            ImageUrl = "",
                            Izena = "Pato"
                        },
                        new
                        {
                            ID = 4,
                            Deskribapena = "Donec ante enim, imperdiet non metus a, aliquet fermentum tortor. Etiam sem nunc, ornare id dignissim non, congue at nulla. Integer semper leo nisl, ac tincidunt libero aliquam id. Morbi quis ornare eros. Nunc at ultricies mi. Aliquam vitae bibendum metus. Aenean venenatis cursus sapien. Vivamus feugiat egestas urna.",
                            ID_lekua = 4,
                            ImageUrl = "",
                            Izena = "Panda"
                        },
                        new
                        {
                            ID = 5,
                            Deskribapena = "Donec ante enim, imperdiet non metus a, aliquet fermentum tortor. Etiam sem nunc, ornare id dignissim non, congue at nulla. Integer semper leo nisl, ac tincidunt libero aliquam id. Morbi quis ornare eros. Nunc at ultricies mi. Aliquam vitae bibendum metus. Aenean venenatis cursus sapien. Vivamus feugiat egestas urna.",
                            ID_lekua = 5,
                            ImageUrl = "",
                            Izena = "Conejo"
                        },
                        new
                        {
                            ID = 6,
                            Deskribapena = "Donec ante enim, imperdiet non metus a, aliquet fermentum tortor. Etiam sem nunc, ornare id dignissim non, congue at nulla. Integer semper leo nisl, ac tincidunt libero aliquam id. Morbi quis ornare eros. Nunc at ultricies mi. Aliquam vitae bibendum metus. Aenean venenatis cursus sapien. Vivamus feugiat egestas urna.",
                            ID_lekua = 2,
                            ImageUrl = "",
                            Izena = "Delfin"
                        },
                        new
                        {
                            ID = 7,
                            Deskribapena = "Donec ante enim, imperdiet non metus a, aliquet fermentum tortor. Etiam sem nunc, ornare id dignissim non, congue at nulla. Integer semper leo nisl, ac tincidunt libero aliquam id. Morbi quis ornare eros. Nunc at ultricies mi. Aliquam vitae bibendum metus. Aenean venenatis cursus sapien. Vivamus feugiat egestas urna.",
                            ID_lekua = 3,
                            ImageUrl = "",
                            Izena = "Elephant"
                        });
                });

            modelBuilder.Entity("Zoo.Models.Lekua", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Deskribapena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Izena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Lekuak");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Deskribapena = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed blandit vitae nunc vel consequat. Nulla euismod ex arcu, id ullamcorper nisi consequat ac. Fusce porta libero erat, sit amet fermentum libero ultricies feugiat. Mauris varius placerat accumsan. Aenean ornare orci quis arcu varius sagittis. Mauris rutrum augue vel ex aliquam, quis molestie dui rutrum. Sed vel augue iaculis metus imperdiet blandit in in justo. Sed efficitur leo at ornare varius. Nullam tincidunt nisl id ultrices convallis. Morbi volutpat turpis at ligula finibus, vel tincidunt mauris bibendum. Nullam auctor tellus quis porta ornare.",
                            Izena = "Interior1"
                        },
                        new
                        {
                            ID = 2,
                            Deskribapena = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed blandit vitae nunc vel consequat. Nulla euismod ex arcu, id ullamcorper nisi consequat ac. Fusce porta libero erat, sit amet fermentum libero ultricies feugiat. Mauris varius placerat accumsan. Aenean ornare orci quis arcu varius sagittis. Mauris rutrum augue vel ex aliquam, quis molestie dui rutrum. Sed vel augue iaculis metus imperdiet blandit in in justo. Sed efficitur leo at ornare varius. Nullam tincidunt nisl id ultrices convallis. Morbi volutpat turpis at ligula finibus, vel tincidunt mauris bibendum. Nullam auctor tellus quis porta ornare.",
                            Izena = "Interior2"
                        },
                        new
                        {
                            ID = 3,
                            Deskribapena = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed blandit vitae nunc vel consequat. Nulla euismod ex arcu, id ullamcorper nisi consequat ac. Fusce porta libero erat, sit amet fermentum libero ultricies feugiat. Mauris varius placerat accumsan. Aenean ornare orci quis arcu varius sagittis. Mauris rutrum augue vel ex aliquam, quis molestie dui rutrum. Sed vel augue iaculis metus imperdiet blandit in in justo. Sed efficitur leo at ornare varius. Nullam tincidunt nisl id ultrices convallis. Morbi volutpat turpis at ligula finibus, vel tincidunt mauris bibendum. Nullam auctor tellus quis porta ornare.",
                            Izena = "Sabana"
                        },
                        new
                        {
                            ID = 4,
                            Deskribapena = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed blandit vitae nunc vel consequat. Nulla euismod ex arcu, id ullamcorper nisi consequat ac. Fusce porta libero erat, sit amet fermentum libero ultricies feugiat. Mauris varius placerat accumsan. Aenean ornare orci quis arcu varius sagittis. Mauris rutrum augue vel ex aliquam, quis molestie dui rutrum. Sed vel augue iaculis metus imperdiet blandit in in justo. Sed efficitur leo at ornare varius. Nullam tincidunt nisl id ultrices convallis. Morbi volutpat turpis at ligula finibus, vel tincidunt mauris bibendum. Nullam auctor tellus quis porta ornare.",
                            Izena = "Lago"
                        },
                        new
                        {
                            ID = 5,
                            Deskribapena = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed blandit vitae nunc vel consequat. Nulla euismod ex arcu, id ullamcorper nisi consequat ac. Fusce porta libero erat, sit amet fermentum libero ultricies feugiat. Mauris varius placerat accumsan. Aenean ornare orci quis arcu varius sagittis. Mauris rutrum augue vel ex aliquam, quis molestie dui rutrum. Sed vel augue iaculis metus imperdiet blandit in in justo. Sed efficitur leo at ornare varius. Nullam tincidunt nisl id ultrices convallis. Morbi volutpat turpis at ligula finibus, vel tincidunt mauris bibendum. Nullam auctor tellus quis porta ornare.",
                            Izena = "Bosque"
                        });
                });

            modelBuilder.Entity("Zoo.Models.Bezero", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Abizena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Izena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Bezero");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Zoo.Models.Arraza", b =>
                {
                    b.HasOne("Zoo.Models.Lekua", "Lekua")
                        .WithMany()
                        .HasForeignKey("ID_lekua");

                    b.Navigation("Lekua");
                });
#pragma warning restore 612, 618
        }
    }
}
